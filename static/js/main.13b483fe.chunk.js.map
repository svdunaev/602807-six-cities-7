{"version":3,"sources":["store/action.js","constants.js","utils/adapter.js","store/api-action.js","components/header/header.jsx","components/singin-page/signin-page.jsx","utils/common.js","common-prop-types.js","components/offer-card/offer-card.jsx","components/fav-locations-item/fav-locations-item.jsx","components/loading-screen/loading-screen.jsx","components/favorites-page/favorites-page.jsx","components/offers-list/offers-list.jsx","hooks/useMap.js","components/map/map.jsx","utils/formatdate.js","components/review/review.jsx","components/reviews-list/reviews-list.jsx","components/rating-changer/rating-changer.jsx","components/help-msg/help-msg.jsx","components/post-error-msg/post-error-msg.jsx","components/review-form/review-form.jsx","components/reviews-loading-screen/reviews-loading-screen.jsx","components/reviews-board/reviews-board.jsx","components/offer-page/offer-page.jsx","components/not-found-page/not-found-page.jsx","components/city/city.jsx","components/cities-list/cities-list.jsx","selectors/selectors.js","components/offers-count-title/offers-count-title.jsx","components/sort-form/sort-form.jsx","components/home-page/home-page.jsx","components/main/main.jsx","browser-history.js","components/private-route/private-route.jsx","components/app/app.jsx","store/reducer.js","services/api.js","index.js","store/middleware/redirect.js"],"names":["ActionType","CHANGE_CITY","SET_OFFERS","SET_OFFERS_FAIL","CHANGE_SORT_TYPE","LOGIN","LOGOUT","REDIRECTTOROUTE","SET_COMMENTS","SET_APP_ERROR","ActionCreator","city","type","payload","offers","sortType","url","userInfo","RoomType","SortType","POPULAR","PRICE_LOW_TO_HIGH","PRICE_HIGH_TO_LOW","TOP_RATED_FIRST","AppRoute","ApiRoute","AuthorizationStatus","CITIES","adaptOfferToClient","offer","adaptedOffer","maxAdults","max_adults","previewImage","preview_image","isFavorite","is_favorite","isPremium","is_premium","host","avatarUrl","avatar_url","id","isPro","is_pro","name","adaptReviewToClient","review","user","adaptUserInfoToClient","adaptedUserInfo","loadOffers","dispatch","_getState","api","get","then","data","map","catch","getOfferById","apiInstance","getNearbyOffers","logout","delete","localStorage","removeItem","toggleFavoriteOffer","status","post","connect","authorizationStatus","avatar","email","onSignOutClick","props","isUserAuthorized","className","to","src","alt","width","height","style","backgroundImage","borderRadius","onClick","EMAIL_RE","onSubmit","authData","setItem","token","login","emailRef","useRef","passwordRef","action","evt","preventDefault","current","value","password","placeholder","ref","onInput","validationMessage","test","setCustomValidity","reportValidity","required","Array","from","find","symbol","cursor","getRatingInPercents","PropTypes","exact","bedrooms","number","isRequired","location","latitude","longitude","zoom","string","description","goods","arrayOf","bool","images","price","rating","oneOf","title","comment","date","shape","Math","round","OfferCard","card","rootClassName","imageWrapperClassName","infoWrapperClassName","onHover","onFavoriteToggle","putToFavorites","useCallback","a","Number","setTimeout","history","useHistory","onMouseEnter","onMouseLeave","event","push","xlinkHref","defaultProps","state","FavLocationsItem","cityName","cityOffers","href","cardItem","LoadingScreen","fetchAllOffers","useState","isLoading","setIsLoading","favoriteOffers","setFavoriteOffers","loadFavoriteOffers","offersData","handleFavoriteToggle","favoriteOffersByCity","useMemo","Object","entries","reduce","acc","useEffect","Fragment","display","xmlns","viewBox","fillRule","clipRule","d","length","fetchOffers","useMap","mapRef","setMap","markersGroup","setMarkersGroup","instance","leaflet","center","lat","lng","tileLayer","attribution","addTo","layerGroup","icon","iconUrl","iconSize","iconAnchor","iconActive","Map","points","activeCard","clearLayers","flyTo","forEach","point","marker","formatDate","formatTemplate","dayjs","format","DateFormatTemplate","Review","dateTime","ReviewsList","reviews","sortedReviews","resultReviews","slice","sort","prevReview","nextReview","dateA","dateB","diff","RatingChanger","isDisabled","currentRatingValue","changeHandler","onChange","checked","disabled","htmlFor","HelpMessage","PostErrorMsg","color","CommentLength","RatingValuesMap","1","2","3","4","5","sendReview","offerId","newReview","_dispatch","postReview","updateReviewsList","initialState","isBlocked","isNeedErrorMessage","setState","isStateValid","prevState","keys","valueA","valueB","target","ReviewsLoadingScreen","loadReviews","getReviews","isLoadingError","reviewsList","update","isFetching","isError","nearbyOffers","reducer","useReducer","useParams","Promise","all","offerResult","nearbyOffersResult","offersOnMap","results","handleFavoriteClick","image","good","NotFoundPage","City","currentCity","changeCity","getCurrentCityOffers","createSelector","filter","getSortedCityOffers","currentSortType","currentOffers","prevOffer","nextOffer","offersCount","changeSortType","isOpened","setIsOpened","optionsListRef","onDocumentClick","parentElement","document","addEventListener","removeEventListener","method","tabIndex","values","setActiveCard","isEmptyOffers","Main","browserHistory","createBrowserHistory","render","path","routeProps","isDataLoaded","isAppError","isCheckedAuthStatus","component","HttpCode","onUnauthorized","onApiUnavailable","axiosInstance","axios","create","baseURL","timeout","interceptors","response","use","err","request","config","headers","getItem","createApi","store","createStore","composeWithDevTools","applyMiddleware","thunk","withExtraArgument","_store","next","REDIRECT_TO_ROUTE","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.13b483fe.chunk.js","sourcesContent":["const ActionType = {\n  CHANGE_CITY: 'citySelect/changeCity',\n  SET_OFFERS: 'citySelect/setOffers',\n  SET_OFFERS_FAIL: 'citySelect/setOffersFail',\n  CHANGE_SORT_TYPE: 'sort/changeSortType',\n  LOGIN: 'user/login',\n  LOGOUT: 'user/logout',\n  REDIRECTTOROUTE: 'redirect/redirectToRoute',\n  SET_COMMENTS: 'data/setComments',\n  SET_APP_ERROR: 'app/setError',\n};\n\nconst ActionCreator = {\n  changeCity: (city) => ({\n    type: ActionType.CHANGE_CITY,\n    payload: city,\n  }),\n  setOffers: (offers) => ({\n    type: ActionType.SET_OFFERS,\n    payload: offers,\n  }),\n  setOffersFail: () => ({\n    type: ActionType.SET_OFFERS_FAIL,\n  }),\n  setComments: (comments) => ({\n    type: ActionType.SET_COMMENTS,\n    payload: comments,\n  }),\n  changeSortType: (sortType) => ({\n    type: ActionType.CHANGE_SORT_TYPE,\n    payload: sortType,\n  }),\n  redirectToRoute: (url) => ({\n    type: ActionType.REDIRECTTOROUTE,\n    payload: url,\n  }),\n  login: (userInfo) => ({\n    type: ActionType.LOGIN,\n    payload: userInfo,\n  }),\n  logout: () => ({\n    type: ActionType.LOGOUT,\n  }),\n  setAppError: () => ({\n    type: ActionType.SET_APP_ERROR,\n  }),\n};\n\nexport {ActionType, ActionCreator};\n","export const RoomType = {\n  APARTMENT: 'apartment',\n  ROOM: 'room',\n  HOUSE: 'house',\n  HOTEL: 'hotel',\n  STUDIO: 'studio',\n};\n\nexport const SortType = {\n  POPULAR: 'Popular',\n  PRICE_LOW_TO_HIGH: 'Price: low to high',\n  PRICE_HIGH_TO_LOW: 'Price: high to low',\n  TOP_RATED_FIRST: 'Top rated first',\n};\n\nexport const AppRoute = {\n  ROOT: '/',\n  LOGIN: '/login',\n  FAVORITES: '/favorites',\n  OFFER: '/offer',\n};\n\nexport const ApiRoute = {\n  OFFERS: '/hotels',\n  LOGIN: '/login',\n  LOGOUT: '/logout',\n  REVIEWS: '/comments',\n  FAROVITES: '/favorite',\n};\n\nexport const AuthorizationStatus = {\n  AUTH: 'AUTH',\n  NO_AUTH: 'NO_AUTH',\n  UNKNOWN: 'UNKNOWN',\n};\n\nexport const RESULT = {\n  SUCCESS: 'success',\n  ERROR: 'error',\n};\n\nexport const SINGULAR_NUMBER = 1;\n\nexport const API_REFRESH_TIMEOUT = 300;\n\nexport const CITIES = ['Amsterdam', 'Cologne', 'Dusseldorf', 'Paris', 'Brussels', 'Hamburg'];\n","const adaptOfferToClient = (offer) => {\n  const adaptedOffer = {\n    ...offer,\n    maxAdults: offer.max_adults,\n    previewImage: offer.preview_image,\n    isFavorite: offer.is_favorite,\n    isPremium: offer.is_premium,\n    host: {\n      avatarUrl: offer.host.avatar_url,\n      id: offer.host.id,\n      isPro: offer.host.is_pro,\n      name: offer.host.name,\n    },\n  };\n\n  delete adaptedOffer.max_adults;\n  delete adaptedOffer.preview_image;\n  delete adaptedOffer.is_favorite;\n  delete adaptedOffer.is_premium;\n\n  return adaptedOffer;\n};\n\nconst adaptReviewToClient = (review) => {\n  const adaptedReview = {\n    ...review,\n    user: {\n      avatarUrl: review.user.avatar_url,\n      id: review.user.id,\n      isPro: review.user.is_pro,\n      name: review.user.name,\n    },\n  };\n\n  return adaptedReview;\n};\n\nconst adaptUserInfoToClient = (userInfo) => {\n  const adaptedUserInfo = {\n    ...userInfo,\n    avatarUrl: userInfo.avatar_url,\n    isPro: userInfo.is_pro,\n  };\n\n  delete adaptedUserInfo.avatar_url;\n  delete adaptedUserInfo.is_pro;\n\n  return adaptedUserInfo;\n};\n\nexport {adaptOfferToClient, adaptReviewToClient, adaptUserInfoToClient};\n","import {ActionCreator} from './action';\nimport {ApiRoute, AppRoute} from '../constants';\nimport {adaptOfferToClient, adaptReviewToClient, adaptUserInfoToClient} from '../utils/adapter';\nimport { api as apiInstance } from '../index';\n\n\nconst loadOffers = () => (dispatch, _getState, api) => (\n  api.get(ApiRoute.OFFERS)\n    .then(({data}) => data.map((offer) => adaptOfferToClient(offer)))\n    .then((offers) => dispatch(ActionCreator.setOffers(offers)))\n    .catch(() => dispatch(ActionCreator.setOffersFail()))\n);\n\nconst checkAuth = () => (dispatch, _getState, api) => (\n  api.get(ApiRoute.LOGIN)\n    .then(({data}) => {\n      dispatch(ActionCreator.login(adaptUserInfoToClient(data)));\n    })\n);\n\nconst getOfferById = (id) => (\n  apiInstance.get(`${ApiRoute.OFFERS}/${id}`)\n    .then(({data}) => adaptOfferToClient(data))\n);\n\nconst getNearbyOffers = (id) => (\n  apiInstance.get(`${ApiRoute.OFFERS}/${id}/nearby`)\n    .then(({data}) => data.map((offer) => adaptOfferToClient(offer)))\n);\n\nconst login = (authData) => (dispatch, _getState, api) => (\n  api.post(ApiRoute.LOGIN, authData)\n    .then(({data}) => {\n      localStorage.setItem('token', data.token);\n      dispatch(ActionCreator.login(adaptUserInfoToClient(data)));\n    })\n    .then(() => dispatch(ActionCreator.redirectToRoute(AppRoute.ROOT)))\n);\n\nconst logout = () => (dispatch, _getState, api) => (\n  api.delete(ApiRoute.LOGOUT)\n    .then(() => localStorage.removeItem('token'))\n    .then(() => dispatch(ActionCreator.logout()))\n);\n\nconst getReviews = (offerId) => (_dispatch, _getState, api) => (\n  api.get(`${ApiRoute.REVIEWS}/${offerId}`)\n    .then(({data}) => data.map((review) => adaptReviewToClient(review)))\n);\n\nconst postReview = (offerId, newReview) => (_dispatch, _getState, api) => (\n  api.post(`${ApiRoute.REVIEWS}/${offerId}`, newReview)\n    .then(({data}) => data.map((review) => adaptReviewToClient(review)))\n);\n\nconst fetchFavoriteOffers = () => (\n  apiInstance.get(ApiRoute.FAROVITES)\n    .then(({data}) => data.map((offer) => adaptOfferToClient(offer)))\n);\n\nconst toggleFavoriteOffer = (id, status)  => {\n  apiInstance.post(`${ApiRoute.FAROVITES}/${id}/${status}`)\n    .then(({data}) => adaptOfferToClient(data));\n};\n\nexport {loadOffers, checkAuth, login, logout, getReviews, postReview, getOfferById, getNearbyOffers, fetchFavoriteOffers, toggleFavoriteOffer };\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport {AppRoute, AuthorizationStatus} from '../../constants';\nimport {logout} from '../../store/api-action';\nimport PropTypes from 'prop-types';\n\nfunction Header(props) {\n  const {authorizationStatus, onSignOutClick, avatar, email} = props;\n  const isUserAuthorized = authorizationStatus === AuthorizationStatus.AUTH;\n  return (\n    <header className=\"header\">\n      <div className=\"container\">\n        <div className=\"header__wrapper\">\n          <div className=\"header__left\">\n            <Link className=\"header__logo-link header__logo-link--active\" to=\"/\">\n              <img className=\"header__logo\" src=\"img/logo.svg\" alt=\"6 cities logo\" width=\"81\" height=\"41\"/>\n            </Link>\n          </div>\n          <nav className=\"header__nav\">\n            <ul className=\"header__nav-list\">\n              <li className=\"header__nav-item user\">\n                <Link className=\"header__nav-link header__nav-link--profile\"\n                  to={isUserAuthorized ? AppRoute.FAVORITES : AppRoute.LOGIN}\n                >\n                  <div className=\"header__avatar-wrapper user__avatar-wrapper\"\n                    style={\n                      isUserAuthorized\n                        ? ({\n                          backgroundImage: `url(${avatar})`,\n                          borderRadius: '10px',\n                        })\n                        : ({})\n                    }\n                  >\n                  </div>\n                  {\n                    isUserAuthorized\n                      ? <span className=\"header__user-name user__name\">{email}</span>\n                      : <span className=\"header__login\">Sign in</span>\n                  }\n                </Link>\n              </li>\n              {\n                isUserAuthorized && (\n                  <li className=\"header__nav-item\">\n                    <Link className=\"header__nav-link\" to=\"#\" onClick={onSignOutClick}>\n                      <span className=\"header__signout\">Sign out</span>\n                    </Link>\n                  </li>\n                )\n              }\n            </ul>\n          </nav>\n        </div>\n      </div>\n    </header>\n  );\n}\n\nHeader.propTypes = {\n  authorizationStatus: PropTypes.string.isRequired,\n  avatar: PropTypes.string,\n  email: PropTypes.string,\n  onSignOutClick: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = ({authorizationStatus, userInfo}) => ({\n  authorizationStatus,\n  avatar: userInfo.avatarUrl,\n  email: userInfo.email,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSignOutClick() {\n    dispatch(logout());\n  },\n});\n\nexport {Header};\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\n","import React, {useRef} from 'react';\nimport {Link} from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport {login} from '../../store/api-action';\nimport Header from '../header/header';\n\nconst EMAIL_RE = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\nfunction SignIn (props) {\n  const {onSubmit} = props;\n  const emailRef = useRef();\n  const passwordRef = useRef();\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n    onSubmit({\n      email: emailRef.current.value,\n      password: passwordRef.current.value,\n    });\n  };\n\n  const onLoginInput = () => {\n    const email = emailRef.current.value;\n    let validationMessage = '';\n\n    if (!email || !EMAIL_RE.test(email)) {\n      validationMessage = 'Некорректный email';\n    }\n\n    emailRef.current.setCustomValidity(validationMessage);\n    emailRef.current.reportValidity();\n  };\n\n  const onPasswordInput = () => {\n    const password = passwordRef.current.value;\n    let validationMessage = '';\n\n    if (password && !Array.from(password).find((symbol) => symbol !== ' ')) {\n      validationMessage = 'Пароль не должен состоять только из пробелов';\n    }\n\n    passwordRef.current.setCustomValidity(validationMessage);\n    passwordRef.current.reportValidity();\n  };\n\n  return (\n    <div className=\"page page--gray page--login\">\n      <Header />\n      <main className=\"page__main page__main--login\">\n        <div className=\"page__login-container container\">\n          <section className=\"login\">\n            <h1 className=\"login__title\">Sign in</h1>\n            <form\n              className=\"login__form form\"\n              action=\"\"\n              onSubmit={handleSubmit}\n            >\n              <div className=\"login__input-wrapper form__input-wrapper\">\n                <label className=\"visually-hidden\">E-mail</label>\n                <input\n                  className=\"login__input form__input\"\n                  type=\"email\"\n                  name=\"email\"\n                  placeholder=\"Email\"\n                  ref={emailRef}\n                  onInput={onLoginInput}\n                  required\n                />\n              </div>\n              <div className=\"login__input-wrapper form__input-wrapper\">\n                <label className=\"visually-hidden\">Password</label>\n                <input\n                  className=\"login__input form__input\"\n                  type=\"password\"\n                  name=\"password\"\n                  placeholder=\"Password\"\n                  ref={passwordRef}\n                  onInput={onPasswordInput}\n                  required\n                />\n              </div>\n              <button\n                className=\"login__submit form__submit button\"\n                type=\"submit\"\n              >\n                Sign in\n              </button>\n            </form>\n          </section>\n          <section className=\"locations locations--login locations--current\">\n            <div className=\"locations__item\">\n              <Link\n                className=\"locations__item-link\"\n                to=\"#\"\n                style={{cursor: 'default'}}\n              >\n                <span>Amsterdam</span>\n              </Link>\n            </div>\n          </section>\n        </div>\n      </main>\n    </div>\n  );\n}\n\n\nSignIn.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSubmit(authData) {\n    dispatch(login(authData));\n  },\n});\n\n\nexport {SignIn};\nexport default connect(null, mapDispatchToProps)(SignIn);\n","const MAX_RATING_VALUE = 5;\nconst FULL_PERCENTS_VALUE = 100;\n\nconst getRatingInPercents = (rating) => Math.round(rating)/MAX_RATING_VALUE*FULL_PERCENTS_VALUE;\n\n\nexport {getRatingInPercents};\n","import PropTypes from 'prop-types';\nimport {RoomType} from './constants';\n\nexport const OfferType = PropTypes.exact({\n  bedrooms: PropTypes.number.isRequired,\n  location: PropTypes.exact({\n    latitude: PropTypes.number,\n    longitude: PropTypes.number,\n    zoom: PropTypes.number,\n  }).isRequired,\n  city: PropTypes.exact({\n    location: PropTypes.exact({\n      latitude: PropTypes.number,\n      longitude: PropTypes.number,\n      zoom: PropTypes.number,\n    }),\n    name: PropTypes.string,\n  }).isRequired,\n  description: PropTypes.string.isRequired,\n  goods: PropTypes.arrayOf(PropTypes.string).isRequired,\n  host: PropTypes.exact({\n    avatarUrl: PropTypes.string,\n    id: PropTypes.number,\n    isPro: PropTypes.bool,\n    name: PropTypes.string,\n  }).isRequired,\n  id: PropTypes.number.isRequired,\n  images: PropTypes.arrayOf(PropTypes.string).isRequired,\n  price: PropTypes.number.isRequired,\n  rating: PropTypes.number.isRequired,\n  type: PropTypes.oneOf([RoomType.APARTMENT, RoomType.HOTEL, RoomType.HOUSE, RoomType.ROOM, RoomType.STUDIO]).isRequired,\n  isPremium: PropTypes.bool.isRequired,\n  isFavorite: PropTypes.bool.isRequired,\n  title: PropTypes.string.isRequired,\n  maxAdults: PropTypes.number.isRequired,\n  previewImage: PropTypes.string.isRequired,\n});\n\nexport const ReviewType = PropTypes.exact({\n  comment: PropTypes.string.isRequired,\n  date: PropTypes.string.isRequired,\n  id: PropTypes.number.isRequired,\n  rating: PropTypes.number.isRequired,\n  user: PropTypes.shape(\n    {\n      avatarUrl: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired,\n      isPro: PropTypes.bool.isRequired,\n      name: PropTypes.string.isRequired,\n    },\n  ),\n});\n","import React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport {Link} from 'react-router-dom';\nimport {OfferType} from '../../common-prop-types';\nimport { getRatingInPercents } from '../../utils/common';\nimport { useHistory } from 'react-router';\nimport { AppRoute, AuthorizationStatus, API_REFRESH_TIMEOUT } from '../../constants';\nimport { toggleFavoriteOffer } from '../../store/api-action';\nimport { connect } from 'react-redux';\n\n\nfunction OfferCard(props) {\n  const {\n    card: {price, rating, type, isPremium, isFavorite, previewImage, id, title},\n    rootClassName,\n    imageWrapperClassName,\n    infoWrapperClassName,\n    onHover,\n    onFavoriteToggle,\n    authorizationStatus,\n  } = props;\n\n  const putToFavorites = useCallback(async () => {\n    await toggleFavoriteOffer(id, Number(!isFavorite));\n    setTimeout(onFavoriteToggle, API_REFRESH_TIMEOUT);\n  }, [id, isFavorite, onFavoriteToggle]);\n\n  const history = useHistory();\n\n  const handleMouseEnter = (evt) => {\n    if (!onHover) {\n      return;\n    }\n    onHover(props.card);\n  };\n  const handleMouseLeave = () => {\n    if (!onHover) {\n      return;\n    }\n    onHover(null);\n  };\n\n  const handleFavoriteClick = (event) => {\n    event.preventDefault();\n    if (authorizationStatus === AuthorizationStatus.NO_AUTH) {\n      history.push(AppRoute.LOGIN);\n    }\n    putToFavorites();\n  };\n\n  return (\n    <article\n      className={`place-card ${rootClassName}`}\n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={handleMouseLeave}\n    >\n      {isPremium && (\n        <div className=\"place-card__mark\">\n          <span>Premium</span>\n        </div>\n      )}\n      <div className={`place-card__image-wrapper ${imageWrapperClassName}`}>\n        <img className=\"place-card__image\" src={previewImage} style={{width: '260px', height: '200px'}} alt=\"Place\" />\n      </div>\n      <div className={`place-card__info ${infoWrapperClassName}`}>\n        <div className=\"place-card__price-wrapper\">\n          <div className=\"place-card__price\">\n            <b className=\"place-card__price-value\">&euro;{price}</b>\n            <span className=\"place-card__price-text\">&#47;&nbsp;night</span>\n          </div>\n          <button className={`place-card__bookmark-button ${isFavorite ?'place-card__bookmark-button--active' : ''} button`} type=\"button\" onClick={handleFavoriteClick}>\n            <svg className=\"place-card__bookmark-icon\" width=\"18\" height=\"19\">\n              <use xlinkHref=\"#icon-bookmark\"></use>\n            </svg>\n            <span className=\"visually-hidden\">To bookmarks</span>\n          </button>\n        </div>\n        <div className=\"place-card__rating rating\">\n          <div className=\"place-card__stars rating__stars\">\n            <span style={{width: `${getRatingInPercents(rating)}%`}}></span>\n            <span className=\"visually-hidden\">{rating}</span>\n          </div>\n        </div>\n        <Link to={`/offer/${id}`} >\n          <h2 className=\"place-card__name\">\n            {title}\n          </h2>\n        </Link>\n        <p className=\"place-card__type\">{type}</p>\n      </div>\n    </article>\n  );\n}\n\nOfferCard.defaultProps = {\n  rootClassName: '',\n  imageWrapperClassName: '',\n  infoWrapperClassName: '',\n};\n\nOfferCard.propTypes = {\n  card: OfferType,\n  rootClassName: PropTypes.string,\n  imageWrapperClassName: PropTypes.string,\n  infoWrapperClassName: PropTypes.string,\n  onHover: PropTypes.func,\n  onFavoriteToggle: PropTypes.func,\n  authorizationStatus: PropTypes.oneOf(Object.values(AuthorizationStatus)),\n};\n\nconst mapStateToProps = (state) => ({\n  authorizationStatus: state.authorizationStatus,\n});\n\nexport {OfferCard};\nexport default connect(mapStateToProps)(OfferCard);\n","\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {OfferType} from '../../common-prop-types';\nimport OfferCard from '../offer-card/offer-card';\n\nfunction FavLocationsItem(props) {\n  const {cityName, cityOffers, onFavoriteToggle} = props;\n\n  return (\n    <li className=\"favorites__locations-items\">\n      <div className=\"favorites__locations locations locations--current\">\n        <div className=\"locations__item\">\n          <a className=\"locations__item-link\" href=\"/#\">\n            <span>{cityName}</span>\n          </a>\n        </div>\n      </div>\n      <div className=\"favorites__places\">\n        {cityOffers.map((cardItem) => (\n          <OfferCard\n            key={cardItem.id}\n            card={cardItem}\n            rootClassName=\"favorites__card\"\n            imageWrapperClassName=\"favorites__image-wrapper\"\n            infoWrapperClassName=\"favorites__card-info\"\n            onFavoriteToggle={onFavoriteToggle}\n          />),\n        )}\n      </div>\n    </li>\n  );\n}\n\nFavLocationsItem.propTypes = {\n  cityName: PropTypes.string.isRequired,\n  cityOffers: PropTypes.arrayOf(OfferType).isRequired,\n  onFavoriteToggle: PropTypes.func.isRequired,\n};\n\nexport default FavLocationsItem;\n","import React from 'react';\n\nfunction LoadingScreen() {\n  return (\n    <p>Loading ...</p>\n  );\n}\n\nexport default LoadingScreen;\n","import React, { useCallback, useEffect, useState, useMemo } from 'react';\nimport {Link} from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport FavLocationsItem from '../fav-locations-item/fav-locations-item';\nimport { connect } from 'react-redux';\nimport { fetchFavoriteOffers, loadOffers } from '../../store/api-action';\nimport LoadingScreen from '../loading-screen/loading-screen';\nimport Header from '../header/header';\n\n\nfunction FavoritesPage(props) {\n  const {fetchAllOffers} = props;\n  const [isLoading, setIsLoading] = useState(true);\n  const [favoriteOffers, setFavoriteOffers] = useState([]);\n\n  const loadFavoriteOffers = useCallback(async () => {\n    const offersData = await fetchFavoriteOffers();\n    setIsLoading(false);\n    setFavoriteOffers(offersData);\n  }, []);\n\n  const handleFavoriteToggle = useCallback(() => {\n    loadFavoriteOffers();\n    fetchAllOffers();\n  }, [fetchAllOffers, loadFavoriteOffers]);\n\n  const favoriteOffersByCity = useMemo(() => Object.entries(favoriteOffers.reduce((acc, offer) => {\n    if (offer.isFavorite !== true) {\n      return acc;\n    }\n\n    if (offer.city.name in acc) {\n      acc[offer.city.name].push(offer);\n    } else {\n      acc[offer.city.name] = [offer];\n    }\n\n    return acc;\n  }, [])), [favoriteOffers]);\n\n  useEffect(() => {\n    loadFavoriteOffers();\n  }, [loadFavoriteOffers]);\n\n  if (isLoading) {\n    return <LoadingScreen />;\n  }\n\n  return (\n    <React.Fragment>\n      <Header />\n      <div style={{display: 'none'}}>\n        <svg xmlns=\"http://www.w3.org/2000/svg\"><symbol id=\"icon-arrow-select\" viewBox=\"0 0 7 4\"><path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M0 0l3.5 2.813L7 0v1.084L3.5 4 0 1.084V0z\"></path></symbol><symbol id=\"icon-bookmark\" viewBox=\"0 0 17 18\"><path d=\"M3.993 2.185l.017-.092V2c0-.554.449-1 .99-1h10c.522 0 .957.41.997.923l-2.736 14.59-4.814-2.407-.39-.195-.408.153L1.31 16.44 3.993 2.185z\"></path></symbol><symbol id=\"icon-star\" viewBox=\"0 0 13 12\"><path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M6.5 9.644L10.517 12 9.451 7.56 13 4.573l-4.674-.386L6.5 0 4.673 4.187 0 4.573 3.549 7.56 2.483 12 6.5 9.644z\"></path></symbol></svg>\n      </div>\n\n      <div className=\"page\">\n        <main className=\"page__main page__main--favorites\">\n          <div className=\"page__favorites-container container\">\n            {favoriteOffersByCity.length === 0 && (\n              <section className=\"favorites favorites--empty\">\n                <h1 className=\"visually-hidden\">Favorites (empty)</h1>\n                <div className=\"favorites__status-wrapper\">\n                  <b className=\"favorites__status\">Nothing yet saved.</b>\n                  <p className=\"favorites__status-description\">Save properties to narrow down search or plan your future trips.</p>\n                </div>\n              </section>\n            )}\n            {favoriteOffersByCity.length > 0 && (\n              <section className=\"favorites\">\n                <h1 className=\"favorites__title\">Saved listing</h1>\n                <ul className=\"favorites__list\">\n                  {favoriteOffersByCity.map(([cityName, cityOffers]) => (\n                    <FavLocationsItem\n                      key={cityName}\n                      cityName={cityName}\n                      cityOffers={cityOffers}\n                      onFavoriteToggle={handleFavoriteToggle}\n                    />),\n                  )}\n                </ul>\n              </section>\n            )}\n          </div>\n        </main>\n        <footer className=\"footer container\">\n          <Link to=\"/\" className=\"footer__logo-link\">\n            <img className=\"footer__logo\" src=\"img/logo.svg\" alt=\"6 cities logo\" width=\"64\" height=\"33\"/>\n          </Link>\n        </footer>\n      </div>\n    </React.Fragment>\n  );\n}\nFavoritesPage.propTypes = {\n  fetchAllOffers: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchAllOffers() {\n    dispatch(loadOffers());\n  },\n});\n\n\nexport {FavoritesPage};\nexport default connect(null, mapDispatchToProps)(FavoritesPage);\n","/* eslint-disable no-console */\nimport React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport OfferCard from '../offer-card/offer-card';\nimport {OfferType} from '../../common-prop-types';\nimport { loadOffers } from '../../store/api-action';\nimport { connect } from 'react-redux';\n\nfunction OffersList(props) {\n  const {offers, onHover, fetchOffers, onFavoriteToggle} = props;\n\n  const handleFavoriteToggle = useCallback(() => {\n    fetchOffers();\n    if (onFavoriteToggle) {\n      onFavoriteToggle();\n    }\n  }, [fetchOffers, onFavoriteToggle]);\n\n  return (\n    <div className=\"cities__places-list places__list tabs__content\">\n      {offers.map((cardItem) => (\n        <OfferCard\n          key={cardItem.id}\n          card={cardItem}\n          rootClassName=\"cities__place-card\"\n          imageWrapperClassName=\"cities__image-wrapper\"\n          onHover={onHover}\n          offers={offers}\n          onFavoriteToggle={handleFavoriteToggle}\n        />\n      ))}\n    </div>\n  );\n}\n\nOffersList.propTypes = {\n  offers: PropTypes.arrayOf(OfferType).isRequired,\n  onHover: PropTypes.func,\n  fetchOffers: PropTypes.func.isRequired,\n  onFavoriteToggle: PropTypes.func,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchOffers() {\n    dispatch(loadOffers());\n  },\n});\n\nexport {OffersList};\nexport  default connect(null, mapDispatchToProps)(OffersList);\n","import { useState, useEffect } from 'react';\nimport leaflet from 'leaflet';\n\n\nfunction useMap(mapRef, city) {\n  const [map, setMap] = useState(null);\n  const [markersGroup, setMarkersGroup] = useState(null);\n\n  useEffect(() => {\n    if (mapRef.current !== null && map === null) {\n      const instance = leaflet.map(mapRef.current, {\n        center: {\n          lat: city.location.latitude,\n          lng: city.location.longitude,\n        },\n        zoom: city.location.zoom,\n      });\n\n      leaflet\n        .tileLayer(\n          'https://{s}.basemaps.cartocdn.com/rastertiles/voyager/{z}/{x}/{y}{r}.png',\n          {\n            attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors &copy; <a href=\"https://carto.com/attributions\">CARTO</a>',\n          },\n        )\n        .addTo(instance);\n\n      setMap(instance);\n      setMarkersGroup(leaflet.layerGroup().addTo(instance));\n    }\n  }, [mapRef, city, map]);\n\n  return [map, markersGroup];\n}\n\nexport default useMap;\n","import React, {useRef, useEffect} from 'react';\nimport leaflet from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport PropTypes from 'prop-types';\nimport { OfferType } from '../../common-prop-types';\nimport useMap from '../../hooks/useMap';\n\nconst icon = leaflet.icon({\n  iconUrl: '/img/pin.svg',\n  iconSize: [25, 35],\n  iconAnchor: [15, 30],\n});\n\nconst iconActive = leaflet.icon({\n  iconUrl: 'img/pin-active.svg',\n  iconSize: [25, 35],\n  iconAnchor: [15, 30],\n});\n\nfunction Map(props) {\n  const {city, points, activeCard} = props;\n  const mapRef = useRef(null);\n  const [map, markersGroup] = useMap(mapRef, city);\n\n  useEffect(() => {\n    if (map) {\n      markersGroup.clearLayers();\n      map.flyTo([city.location.latitude, city.location.longitude], city.location.zoom);\n      points.forEach((point) => {\n        leaflet\n          .marker({\n            lat: point.location.latitude,\n            lng: point.location.longitude,\n          }, {\n            icon: (point === activeCard)\n              ? iconActive\n              : icon,\n          })\n          .addTo(markersGroup);\n      });\n    }\n  }, [markersGroup, points, activeCard, city, map]);\n\n  return (\n    <div\n      style={{height: '100%'}}\n      ref={mapRef}\n    >\n    </div>\n  );\n}\n\nMap.propTypes = {\n  points: PropTypes.arrayOf(OfferType).isRequired,\n  city: PropTypes.object.isRequired,\n  activeCard: OfferType,\n};\n\nexport default Map;\n","import dayjs from 'dayjs';\n\nconst formatDate = (date, formatTemplate) => dayjs(date).format(formatTemplate);\nconst compareDate = (dateA, dateB) => dayjs(dateA).diff(dayjs(dateB));\n\nexport {formatDate, compareDate};\n","import React from 'react';\nimport { ReviewType } from '../../common-prop-types';\nimport {formatDate} from '../../utils/formatdate';\nimport { getRatingInPercents } from '../../utils/common';\n\nconst DateFormatTemplate = {\n  STANDART: 'YYYY-MM-DD',\n  HUMANIZE: 'MMMM YYYY',\n};\n\n\nfunction Review(props) {\n  const {review} = props;\n  return (\n    <li className=\"reviews__item\">\n      <div className=\"reviews__user user\">\n        <div className=\"reviews__avatar-wrapper user__avatar-wrapper\">\n          <img className=\"reviews__avatar user__avatar\" src={review.user.avatarUrl} width=\"54\" height=\"54\" alt=\"Reviews avatar\"/>\n        </div>\n        <span className=\"reviews__user-name\">\n          {review.user.name}\n        </span>\n      </div>\n      <div className=\"reviews__info\">\n        <div className=\"reviews__rating rating\">\n          <div className=\"reviews__stars rating__stars\">\n            <span style={{width: `${getRatingInPercents(review.rating)}%`}}>&nbsp;</span>\n            <span className=\"visually-hidden\">Rating</span>\n          </div>\n        </div>\n        <p className=\"reviews__text\">\n          {review.comment}\n        </p>\n        <time className=\"reviews__time\" dateTime={formatDate(review.date, DateFormatTemplate.STANDART)}>{formatDate(review.date, DateFormatTemplate.HUMANIZE)}</time>\n      </div>\n    </li>\n  );\n}\n\nReview.propTypes = {\n  review: ReviewType,\n};\n\nexport default Review;\n","import React, { useMemo } from 'react';\nimport Review from '../review/review';\nimport PropTypes from 'prop-types';\nimport { ReviewType } from '../../common-prop-types';\nimport { compareDate } from '../../utils/formatdate';\n\nconst REVIEWS_MAX_COUNT = 10;\n\nfunction ReviewsList(props) {\n  const {reviews} = props;\n  const sortedReviews = useMemo(() => {\n    const resultReviews = reviews\n      .slice()\n      .sort((prevReview, nextReview) => compareDate(nextReview.date, prevReview.date));\n\n    if (resultReviews.length > REVIEWS_MAX_COUNT) {\n      return resultReviews.slice(0, REVIEWS_MAX_COUNT);\n    }\n\n    return resultReviews;\n  }, [reviews]);\n\n  return (\n    <React.Fragment>\n      <h2 className=\"reviews__title\">Reviews &middot; <span className=\"reviews__amount\">{sortedReviews.length} </span></h2>\n      <ul className=\"reviews__list\">\n        {sortedReviews.map((review) => (\n          <Review review={review} key={review.id} />\n        ))}\n      </ul>\n    </React.Fragment>\n  );\n}\n\nReviewsList.propTypes = {\n  reviews: PropTypes.arrayOf(ReviewType).isRequired,\n};\n\nexport default ReviewsList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n\nfunction RatingChanger({value, title, isDisabled, currentRatingValue, changeHandler}) {\n  return (\n    <>\n      <input\n        className=\"form__rating-input visually-hidden\"\n        name=\"rating\"\n        value={value}\n        id={`${value}-stars`}\n        type=\"radio\"\n        onChange={changeHandler}\n        checked={currentRatingValue === value}\n        disabled={isDisabled}\n      />\n      <label htmlFor={`${value}-stars`} className=\"reviews__rating-label form__rating-label\" title={title}>\n        <svg className=\"form__star-image\" width=\"37\" height=\"33\">\n          <use xlinkHref=\"#icon-star\"/>\n        </svg>\n      </label>\n    </>\n  );\n}\n\n\nRatingChanger.propTypes = {\n  value: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  currentRatingValue: PropTypes.string.isRequired,\n  changeHandler: PropTypes.func.isRequired,\n  isDisabled: PropTypes.bool.isRequired,\n};\n\n\nexport default RatingChanger;\n","import React from 'react';\n\n\nexport default function HelpMessage() {\n  return (\n    <>\n    To submit review please make sure to set <span className=\"reviews__star\">rating</span> and describe your stay with at least <b className=\"reviews__text-amount\">50 characters</b>.\n    </>\n  );\n}\n","import React from 'react';\n\nexport default function PostErrorMsg() {\n  return (\n    <span style={{color: 'red'}}>\n      Err ocured, try again.\n    </span>\n  );\n}\n","import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\nimport RatingChanger from '../rating-changer/rating-changer';\nimport {connect} from 'react-redux';\nimport {AuthorizationStatus} from '../../constants';\nimport {postReview} from '../../store/api-action';\nimport HelpMessage from '../help-msg/help-msg';\nimport PostErrorMessage from '../post-error-msg/post-error-msg';\n\n\nconst ERROR_MESSAGE_SHOW_TIME = 5000;\n\nconst CommentLength = {\n  MIN: 50,\n  MAX: 300,\n};\n\nconst RatingValuesMap = {\n  1: 'terribly',\n  2: 'badly',\n  3: 'not bad',\n  4: 'good',\n  5: 'perfect',\n};\n\n\nfunction ReviewsForm({authorizationStatus, offerId, sendReview, updateReviewsList}) {\n  const initialState = {\n    rating: '',\n    comment: '',\n    isBlocked: false,\n    isNeedErrorMessage: false,\n  };\n\n  const [state, setState] = useState(initialState);\n  const {rating, comment, isBlocked, isNeedErrorMessage} = state;\n\n\n  const isUserAuthorized = authorizationStatus === AuthorizationStatus.AUTH;\n\n  if (!isUserAuthorized) {\n    return null;\n  }\n\n  const isStateValid = rating && comment.length > CommentLength.MIN && comment.length < CommentLength.MAX;\n\n  const onSendSuccess = () => setState(initialState);\n\n  const onSendFail = () => {\n    setState((prevState) => ({\n      ...prevState,\n      isNeedErrorMessage: true,\n    }));\n\n    setTimeout(() => {\n      setState((prevState) => ({\n        ...prevState,\n        isNeedErrorMessage: false,\n        isBlocked: false,\n      }));\n    }, ERROR_MESSAGE_SHOW_TIME);\n  };\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n\n    const newReview = {\n      comment,\n      rating,\n    };\n\n    setState((prevState) => ({\n      ...prevState,\n      isBlocked: true,\n    }));\n\n    sendReview(offerId, newReview)\n      .then((reviews) => updateReviewsList(reviews))\n      .then(() => onSendSuccess())\n      .catch(() => onSendFail());\n  };\n\n  return (\n    <form\n      className=\"reviews__form form\"\n      action=\"#\"\n      onSubmit={handleSubmit}\n    >\n      <label className=\"reviews__label form__label\" htmlFor=\"review\">Your review</label>\n      <div className=\"reviews__rating-form form__rating\">\n        {\n          Object\n            .keys(RatingValuesMap)\n            .sort((valueA, valueB) => valueB - valueA)\n            .map((value) => (\n              <RatingChanger\n                key={value}\n                value={value}\n                title={RatingValuesMap[value]}\n                currentRatingValue={rating}\n                changeHandler={\n                  ({target}) => setState((prevState) => ({\n                    ...prevState,\n                    rating: target.value,\n                  }))\n                }\n                isDisabled={isBlocked}\n              />\n            ))\n        }\n      </div>\n      <textarea\n        className=\"reviews__textarea form__textarea\"\n        id=\"review\"\n        name=\"review\"\n        placeholder=\"Tell how was your stay, what you like and what can be improved\"\n        value={comment}\n        required\n        onChange={({target}) => setState((prevState) => ({\n          ...prevState,\n          comment: target.value,\n        }))}\n        disabled={isBlocked}\n      />\n      <div className=\"reviews__button-wrapper\">\n        <p className=\"reviews__help\">\n          {isNeedErrorMessage ? <PostErrorMessage /> : <HelpMessage />}\n        </p>\n        <button className=\"reviews__submit form__submit button\" type=\"submit\" disabled={!isStateValid || isBlocked}>Submit</button>\n      </div>\n    </form>\n  );\n}\n\nReviewsForm.propTypes = {\n  authorizationStatus: PropTypes.string.isRequired,\n  offerId: PropTypes.string.isRequired,\n  sendReview: PropTypes.func.isRequired,\n  updateReviewsList: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = ({authorizationStatus}) => ({\n  authorizationStatus,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  sendReview(offerId, newReview) {\n    return dispatch(postReview(offerId, newReview));\n  },\n});\n\n\nexport {ReviewsForm};\nexport default connect(mapStateToProps, mapDispatchToProps)(ReviewsForm);\n","import React from 'react';\n\nfunction ReviewsLoadingScreen() {\n  return (\n    <p>loading</p>\n  );\n}\n\nexport default ReviewsLoadingScreen;\n","import React, {useEffect, useState} from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ReviewsList from '../reviews-list/reviews-list';\nimport ReviewForm from '../review-form/review-form';\nimport { getReviews } from '../../store/api-action';\nimport ReviewsLoadingScreen from '../reviews-loading-screen/reviews-loading-screen';\n\nfunction ReviewsBoard(props) {\n  const {offerId, loadReviews} = props;\n  const [state, setState] = useState(\n    {\n      isLoading: true,\n      reviews: [],\n      isLoadingError: false,\n    },\n  );\n\n  const {isLoading, reviews, isLoadingError} = state;\n\n  useEffect(() => {\n    loadReviews(offerId)\n      .then((reviewsList) => setState(\n        {\n          isLoading: false,\n          reviews: reviewsList,\n          isLoadingError: false,\n        },\n      ))\n      .catch(() => setState(\n        {\n          isLoading: false,\n          reviews: [],\n          isLoadingError: true,\n        },\n      ));\n  }, [loadReviews, offerId]);\n\n  if(isLoading) {\n    return <ReviewsLoadingScreen />;\n  }\n\n  return (\n    <section className=\"property__reviews reviews\">\n      <ReviewsList reviews={reviews} isLoadingError={isLoadingError} />\n      <ReviewForm\n        offerId={offerId}\n        updateReviewsList={\n          (update) => setState((prevState) => ({\n            ...prevState,\n            reviews: update,\n            isLoadingError: false,\n          }))\n        }\n      />\n    </section>\n  );\n}\n\nReviewsBoard.propTypes ={\n  offerId: PropTypes.string.isRequired,\n  loadReviews: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  loadReviews(offerId) {\n    return dispatch(getReviews(offerId));\n  },\n});\n\nexport {ReviewsBoard};\nexport default connect(null, mapDispatchToProps)(ReviewsBoard);\n","import React, { useCallback, useEffect, useReducer, useMemo } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport OffersList from '../offers-list/offers-list';\nimport Map from '../map/map';\nimport Header from '../header/header';\nimport ReviewsBoard from '../reviews-board/reviews-board';\nimport { getOfferById, getNearbyOffers, toggleFavoriteOffer, loadOffers } from '../../store/api-action';\nimport LoadingScreen from '../loading-screen/loading-screen';\nimport { getRatingInPercents } from '../../utils/common';\nimport { AppRoute, AuthorizationStatus, API_REFRESH_TIMEOUT } from '../../constants';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nconst IMAGES_MAX_COUNT = 6;\nconst NEARBY_OFFERS_MAX_COUNT = 3;\n\nconst initialState = {\n  isFetching: true,\n  isError: false,\n  offer: null,\n  nearbyOffers: [],\n};\n\nconst reducer = (state, payload) => ({ ...state, ...payload });\n\nfunction OfferPage(props) {\n  const {fetchAllOffers, authorizationStatus} = props;\n  const [\n    { isFetching, isError, offer, nearbyOffers },\n    dispatch,\n  ] = useReducer(reducer, initialState);\n\n  const {id} = useParams();\n\n  const fetchOffers = useCallback(async () => {\n    try {\n      const [offerResult, nearbyOffersResult] = await Promise.all([getOfferById(id), getNearbyOffers(id)]);\n      dispatch({\n        isFetching: false,\n        offer: offerResult,\n        nearbyOffers: nearbyOffersResult,\n      });\n    } catch(err) {\n      dispatch({\n        isFetching: false,\n        isError: true,\n      });\n    }\n  }, [id]);\n\n  const handleFavoriteToggle = useCallback(() => {\n    fetchOffers();\n  }, [fetchOffers]);\n\n  useEffect(() => {\n    fetchOffers();\n  }, [fetchOffers]);\n\n  const offersOnMap = useMemo(() => {\n    let results = [offer];\n    if (nearbyOffers.length > NEARBY_OFFERS_MAX_COUNT) {\n      results = [...results, ...nearbyOffers.slice(0, NEARBY_OFFERS_MAX_COUNT)];\n    } else {\n      results = [...results, ...nearbyOffers];\n    }\n    return results;\n  }, [nearbyOffers, offer]);\n\n  const getImagesInGallery = () => {\n    if (offer.images.length > IMAGES_MAX_COUNT) {\n      return [...offer.images.slice(0, IMAGES_MAX_COUNT)];\n    }\n    return offer.images;\n  };\n\n  const history = useHistory();\n\n  const handleFavoriteClick = useCallback(async (evt) => {\n    evt.preventDefault();\n    if (authorizationStatus === AuthorizationStatus.NO_AUTH) {\n      history.push(AppRoute.LOGIN);\n    }\n    await toggleFavoriteOffer(offer.id, Number(!offer.isFavorite));\n    setTimeout(() => {\n      fetchOffers();\n      fetchAllOffers();\n    }, API_REFRESH_TIMEOUT);\n  }, [history, offer, authorizationStatus, fetchOffers, fetchAllOffers]);\n\n  return (\n    <React.Fragment>\n      <Header />\n      <div style={{display: 'none'}}>\n        <svg xmlns=\"http://www.w3.org/2000/svg\"><symbol id=\"icon-arrow-select\" viewBox=\"0 0 7 4\"><path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M0 0l3.5 2.813L7 0v1.084L3.5 4 0 1.084V0z\"></path></symbol><symbol id=\"icon-bookmark\" viewBox=\"0 0 17 18\"><path d=\"M3.993 2.185l.017-.092V2c0-.554.449-1 .99-1h10c.522 0 .957.41.997.923l-2.736 14.59-4.814-2.407-.39-.195-.408.153L1.31 16.44 3.993 2.185z\"></path></symbol><symbol id=\"icon-star\" viewBox=\"0 0 13 12\"><path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M6.5 9.644L10.517 12 9.451 7.56 13 4.573l-4.674-.386L6.5 0 4.673 4.187 0 4.573 3.549 7.56 2.483 12 6.5 9.644z\"></path></symbol></svg>\n      </div>\n\n      {isFetching && (\n        <LoadingScreen />\n      )}\n\n      {isError && (\n        <div>Offer with id {id} not found</div>\n      )}\n\n      {!isError && !isFetching && (\n        <div className=\"page\">\n          <main className=\"page__main page__main--property\">\n            <section className=\"property\">\n              <div className=\"property__gallery-container container\">\n                <div className=\"property__gallery\">\n                  {getImagesInGallery().map((image) => (\n                    <div className=\"property__image-wrapper\" key={image} >\n                      <img className=\"property__image\" src={image} alt=\"studio\"/>\n                    </div>\n                  ))}\n                </div>\n              </div>\n              <div className=\"property__container container\">\n                <div className=\"property__wrapper\">\n                  {offer.isPremium && (\n                    <div className=\"property__mark\">\n                      <span>Premium</span>\n                    </div>\n                  )}\n                  <div className=\"property__name-wrapper\">\n                    <h1 className=\"property__name\">\n                      {offer.title}\n                    </h1>\n                    <button className={`property__bookmark-button ${offer.isFavorite ?'property__bookmark-button--active' : ''} button`} type=\"button\" onClick={handleFavoriteClick}>\n                      <svg className=\"property__bookmark-icon\" width=\"31\" height=\"33\">\n                        <use xlinkHref=\"#icon-bookmark\" />\n                      </svg>\n                      <span className=\"visually-hidden\">To bookmarks</span>\n                    </button>\n                  </div>\n                  <div className=\"property__rating rating\">\n                    <div className=\"property__stars rating__stars\">\n                      <span style={{width: `${getRatingInPercents(offer.rating)}%`}}/>\n                      <span className=\"visually-hidden\">Rating</span>\n                    </div>\n                    <span className=\"property__rating-value rating__value\">{offer.rating}</span>\n                  </div>\n                  <ul className=\"property__features\">\n                    <li className=\"property__feature property__feature--entire\">\n                      {offer.type}\n                    </li>\n                    <li className=\"property__feature property__feature--bedrooms\">\n                      {offer.bedrooms} Bedrooms\n                    </li>\n                    <li className=\"property__feature property__feature--adults\">\n                   Max {offer.maxAdults} adults\n                    </li>\n                  </ul>\n                  <div className=\"property__price\">\n                    <b className=\"property__price-value\">&euro;{offer.price}</b>\n                    <span className=\"property__price-text\">&nbsp;night</span>\n                  </div>\n                  <div className=\"property__inside\">\n                    <h2 className=\"property__inside-title\">What&apos;s inside</h2>\n                    <ul className=\"property__inside-list\">\n                      {offer.goods.map((good) => (\n                        <li className=\"property__inside-item\" key={good}>\n                          {good}\n                        </li>\n                      ))}\n                    </ul>\n                  </div>\n                  <div className=\"property__host\">\n                    <h2 className=\"property__host-title\">Meet the host</h2>\n                    <div className=\"property__host-user user\">\n                      <div className={`property__avatar-wrapper ${offer.host.isPro && 'property__avatar-wrapper--pro'} user__avatar-wrapper`}>\n                        <img className=\"property__avatar user__avatar\" src={offer.host.avatarUrl} width=\"74\" height=\"74\" alt=\"Host avatar\" />\n                      </div>\n                      <span className=\"property__user-name\">\n                        {offer.host.name}\n                      </span>\n                      {offer.host.isPro && (\n                        <span className=\"property__user-status\">\n                       Pro\n                        </span>\n                      )}\n                    </div>\n                    <div className=\"property__description\">\n                      <p className=\"property__text\">\n                        {offer.description}\n                      </p>\n                    </div>\n                  </div>\n                  <section className=\"property__reviews reviews\">\n                    <ReviewsBoard offerId={id}/>\n                  </section>\n                </div>\n              </div>\n              {nearbyOffers.length > 0 && (\n                <section className=\"property__map map\">\n                  <Map\n                    city={offer.city}\n                    points={offersOnMap}\n                    activeCard={offer}\n                  />\n                </section>\n              )}\n            </section>\n            {nearbyOffers.length > 0 && (\n              <div className=\"container\">\n                <section className=\"near-places places\">\n                  <h2 className=\"near-places__title\">Other places in the neighbourhood</h2>\n                  <div className=\"near-places__list places__list\">\n                    <OffersList\n                      offers={nearbyOffers}\n                      onFavoriteToggle={handleFavoriteToggle}\n                    />\n                  </div>\n                </section>\n              </div>\n            )}\n          </main>\n        </div>\n      )}\n    </React.Fragment>\n  );\n}\n\nOfferPage.propTypes = {\n  authorizationStatus: PropTypes.string,\n  fetchAllOffers: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  authorizationStatus: state.authorizationStatus,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchAllOffers() {\n    dispatch(loadOffers());\n  },\n});\n\nexport {OfferPage};\nexport default connect(mapStateToProps, mapDispatchToProps)(OfferPage);\n","import React from 'react';\nimport {Link} from 'react-router-dom';\n\nfunction NotFoundPage(props) {\n  return (\n    <React.Fragment>\n      <h2>This page does not exist</h2>\n      <Link to=\"/\">To main page</Link>\n    </React.Fragment>\n  );\n}\n\nexport default NotFoundPage;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nfunction City(props) {\n  const {cityName, currentCity, onClick} = props;\n  return (\n    <li className=\"locations__item\">\n      <Link className={`locations__item-link tabs__item ${cityName === currentCity && 'tabs__item--active'}`} to=\"#\" onClick={onClick}>\n        <span>{cityName}</span>\n      </Link>\n    </li>\n  );\n}\n\nCity.propTypes = {\n  cityName: PropTypes.string.isRequired,\n  currentCity: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default City;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { CITIES } from '../../constants';\nimport { ActionCreator } from '../../store/action';\nimport City from '../city/city';\nimport PropTypes from 'prop-types';\n\nfunction CitiesList(props) {\n  const {currentCity, changeCity} = props;\n  return (\n    <ul className=\"locations__list tabs__list\">\n      {\n        CITIES.map((city) => (\n          <City\n            key={city}\n            cityName={city}\n            currentCity={currentCity}\n            onClick={() => changeCity(city)}\n          />\n        ))\n      }\n    </ul>\n  );\n}\n\nCitiesList.propTypes = {\n  currentCity: PropTypes.string.isRequired,\n  changeCity: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  currentCity: state.currentCity,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  changeCity(city) {\n    dispatch(ActionCreator.changeCity(city));\n  },\n});\n\nexport {CitiesList};\nexport default connect(mapStateToProps, mapDispatchToProps)(CitiesList);\n","import {createSelector} from 'reselect';\nimport { SortType } from '../constants';\n\nconst getOffers = (state) => state.offers;\nconst getCurrentCity = (state) => state.currentCity;\nconst getSortType = (state) => state.currentSortType;\n\nexport const getCurrentCityOffers = createSelector(getCurrentCity, getOffers, (currentCity, offers) =>\n  offers.filter(({city}) => city.name === currentCity),\n);\n\nexport const getSortedCityOffers = createSelector(getCurrentCityOffers, getSortType, (currentOffers, sortType) =>\n{\n  switch (sortType) {\n    case SortType.PRICE_LOW_TO_HIGH:\n      return currentOffers.slice().sort((prevOffer, nextOffer) => prevOffer.price - nextOffer.price);\n\n    case SortType.PRICE_HIGH_TO_LOW:\n      return currentOffers.slice().sort((prevOffer, nextOffer) => nextOffer.price - prevOffer.price);\n\n    case SortType.TOP_RATED_FIRST:\n      return currentOffers.slice().sort((prevOffer, nextOffer) => nextOffer.rating - prevOffer.rating);\n\n    default:\n      return currentOffers;\n  }\n},\n);\n","import { SINGULAR_NUMBER } from '../../constants';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getCurrentCityOffers } from '../../selectors/selectors';\n\nfunction OffersCountTitle(props) {\n  const {offersCount, currentCity} = props;\n\n  return (\n    <>\n      <h2 className=\"visually-hidden\">Places</h2>\n      <b className=\"places__found\">{`${offersCount} ${offersCount === SINGULAR_NUMBER ? 'place' : 'places'} to stay in ${currentCity}`}</b>\n    </>\n  );\n}\n\nOffersCountTitle.propTypes = {\n  offersCount: PropTypes.number.isRequired,\n  currentCity: PropTypes.string.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  offersCount: getCurrentCityOffers(state).length,\n  currentCity: state.currentCity,\n});\n\nexport {OffersCountTitle};\nexport default connect(mapStateToProps)(OffersCountTitle);\n","import { SortType } from '../../constants';\nimport React, { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport { ActionCreator } from '../../store/action';\n\nfunction SortForm(props) {\n  const {currentSortType, changeSortType} = props;\n  const [isOpened, setIsOpened] = useState(null);\n  const optionsListRef = useRef(null);\n\n  useEffect(() => {\n    const onDocumentClick = (evt) => {\n      if (evt.target.parentElement !== optionsListRef.current) {\n        setIsOpened(false);\n      }\n    };\n\n    isOpened && document.addEventListener('click', onDocumentClick);\n\n    return () => isOpened && document.removeEventListener('click', onDocumentClick);\n  }, [isOpened]);\n\n  return (\n    <form className=\"places__sorting\" action=\"#\" method=\"get\">\n      <span className=\"places__sorting-caption\">Sort by </span>\n      <span className=\"places__sorting-type\" tabIndex=\"0\" onClick={() => setIsOpened(!isOpened)}>\n        {currentSortType}\n        <svg className=\"places__sorting-arrow\" width=\"7\" height=\"4\">\n          <use xlinkHref=\"#icon-arrow-select\"></use>\n        </svg>\n      </span>\n      <ul className={`places__options places__options--custom ${isOpened && 'places__options--opened'}`} ref={optionsListRef}>\n        {\n          Object\n            .values(SortType)\n            .map((sortType) => (\n              <li\n                key={sortType}\n                className={`places__option ${sortType === currentSortType && 'places__option--active'}`}\n                tabIndex=\"0\"\n                onClick={() => changeSortType(sortType)}\n              >\n                {sortType}\n              </li>\n            ))\n        }\n      </ul>\n    </form>\n  );\n}\n\nSortForm.propTypes = {\n  currentSortType: PropTypes.string.isRequired,\n  changeSortType: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = ({currentSortType}) => ({\n  currentSortType,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  changeSortType(sortType) {\n    dispatch(ActionCreator.changeSortType(sortType));\n  },\n});\n\nexport {SortForm};\nexport default connect(mapStateToProps, mapDispatchToProps)(SortForm);\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport OffersList from '../offers-list/offers-list';\nimport Map from '../map/map';\nimport CitiesList from '../cities-list/cities-list';\nimport OffersCountTitle from '../offers-count-title/offers-count-title';\nimport SortForm from '../sort-form/sort-form';\nimport { connect } from 'react-redux';\nimport { getSortedCityOffers } from '../../selectors/selectors';\nimport { OfferType } from '../../common-prop-types';\n\nfunction HomePage(props) {\n  const {offers, currentCity} = props;\n\n  const [activeCard, setActiveCard] = useState(null);\n  const onCardHover = (card) => {\n    setActiveCard(card);\n  };\n  const isEmptyOffers = offers.length === 0;\n\n  return (\n    <React.Fragment>\n      <div style={{display: 'none'}}>\n        <svg xmlns=\"http://www.w3.org/2000/svg\"><symbol id=\"icon-arrow-select\" viewBox=\"0 0 7 4\"><path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M0 0l3.5 2.813L7 0v1.084L3.5 4 0 1.084V0z\"></path></symbol><symbol id=\"icon-bookmark\" viewBox=\"0 0 17 18\"><path d=\"M3.993 2.185l.017-.092V2c0-.554.449-1 .99-1h10c.522 0 .957.41.997.923l-2.736 14.59-4.814-2.407-.39-.195-.408.153L1.31 16.44 3.993 2.185z\"></path></symbol><symbol id=\"icon-star\" viewBox=\"0 0 13 12\"><path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M6.5 9.644L10.517 12 9.451 7.56 13 4.573l-4.674-.386L6.5 0 4.673 4.187 0 4.573 3.549 7.56 2.483 12 6.5 9.644z\"></path></symbol></svg>\n      </div>\n\n      <div className={`page page--gray page--main ${isEmptyOffers ? 'page__main--index-empty' : ''}`}>\n        <main className=\"page__main page__main--index\">\n          <h1 className=\"visually-hidden\">Cities</h1>\n          <div className=\"tabs\">\n            <section className=\"locations container\">\n              <CitiesList />\n            </section>\n          </div>\n          <div className=\"cities\">\n            {isEmptyOffers && (\n              <div className=\"cities__places-container cities__places-container--empty container\">\n                <section className=\"cities__no-places\">\n                  <div className=\"cities__status-wrapper tabs__content\">\n                    <b className=\"cities__status\">No places to stay available</b>\n                    <p className=\"cities__status-description\">We could not find any property available at the moment in {currentCity} </p>\n                  </div>\n                </section>\n                <div className=\"cities__right-section\"></div>\n              </div>\n            )}\n            {!isEmptyOffers && (\n              <div className=\"cities__places-container container\">\n                <section className=\"cities__places places\">\n                  <OffersCountTitle />\n                  <SortForm />\n                  <OffersList\n                    offers={offers}\n                    onHover={onCardHover}\n                  />\n                </section>\n                <div className=\"cities__right-section\">\n                  <section className=\"cities__map map\">\n                    <Map\n                      city={offers[0].city}\n                      points={offers}\n                      activeCard={activeCard}\n                    />\n                  </section>\n                </div>\n              </div>\n            )}\n          </div>\n        </main>\n      </div>\n    </React.Fragment>\n  );\n}\n\nHomePage.propTypes = {\n  offers: PropTypes.arrayOf(OfferType),\n  currentCity: PropTypes.string.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  offers: getSortedCityOffers(state),\n  currentCity: state.currentCity,\n});\n\nexport {HomePage};\nexport default connect(mapStateToProps)(HomePage);\n","import React from 'react';\nimport Header from '../header/header';\nimport HomePage from '../home-page/home-page';\n\nfunction Main() {\n  return (\n    <div className=\"page page--gray page--main\">\n      <Header />\n      <HomePage />\n    </div>\n  );\n}\n\nexport default Main;\n","import { createBrowserHistory } from 'history';\n\nconst browserHistory = createBrowserHistory();\n\nexport default browserHistory;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Route, Redirect} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport {AppRoute, AuthorizationStatus} from '../../constants';\n\n\nfunction PrivateRoute(props) {\n  const {render, path, exact, authorizationStatus} = props;\n  return (\n    <Route\n      path={path}\n      exact={exact}\n      render={(routeProps) => (\n        authorizationStatus === AuthorizationStatus.AUTH\n          ? render(routeProps)\n          : <Redirect to={AppRoute.LOGIN} />\n      )}\n    />\n  );\n}\n\nPrivateRoute.propTypes = {\n  authorizationStatus: PropTypes.string.isRequired,\n  exact: PropTypes.bool.isRequired,\n  path: PropTypes.string.isRequired,\n  render: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = ({authorizationStatus}) => ({\n  authorizationStatus,\n});\n\n\nexport {PrivateRoute};\nexport default connect(mapStateToProps)(PrivateRoute);\n","import React from 'react';\nimport {Router as BrowserRouter, Switch, Route, Redirect} from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport SinginPage from '../singin-page/signin-page';\nimport FavoritesPage from '../favorites-page/favorites-page';\nimport OfferPage from '../offer-page/offer-page';\nimport NotFoundPage from '../not-found-page/not-found-page';\nimport Main from '../main/main';\nimport LoadingScreen from '../loading-screen/loading-screen';\nimport { connect } from 'react-redux';\nimport {AppRoute, AuthorizationStatus} from '../../constants';\nimport browserHistory from '../../browser-history';\nimport PrivateRoute from '../private-route/private-route';\n\nfunction App(props) {\n  const {isDataLoaded, authorizationStatus, isAppError} = props;\n  const isCheckedAuthStatus = authorizationStatus !== AuthorizationStatus.UNKNOWN;\n\n  if (isAppError) {\n    return <div>Api unavailable</div>;\n  }\n\n  if (!isDataLoaded || !isCheckedAuthStatus) {\n    return (\n      <LoadingScreen />\n    );\n  }\n  return (\n    <BrowserRouter history={browserHistory}>\n      <Switch>\n        <Route path={AppRoute.ROOT} exact component={Main}/>\n        <Route\n          path=\"/login\"\n          exact\n          render={\n            () => (authorizationStatus === AuthorizationStatus.NO_AUTH)\n              ? <SinginPage />\n              : <Redirect to={AppRoute.ROOT} />\n          }\n        />\n        <PrivateRoute\n          exact\n          path={AppRoute.FAVORITES}\n          render={() => <FavoritesPage/>}\n        />\n        <Route path={`${AppRoute.OFFER}/:id`}>\n          <OfferPage/>\n        </Route>\n        <Route>\n          <NotFoundPage />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nApp.propTypes = {\n  isDataLoaded: PropTypes.bool.isRequired,\n  authorizationStatus: PropTypes.string.isRequired,\n  isAppError: PropTypes.bool.isRequired,\n};\n\nconst mapStateToProps = ({isDataLoaded, authorizationStatus, isAppError}) => ({\n  isDataLoaded,\n  authorizationStatus,\n  isAppError,\n});\n\nexport {App};\nexport default connect(mapStateToProps)(App);\n","import { ActionType } from './action';\nimport { CITIES, AuthorizationStatus, SortType } from '../constants';\n\nconst initialState = {\n  currentCity: CITIES[3],\n  offers: [],\n  isDataLoaded: false,\n  authorizationStatus: AuthorizationStatus.NO_AUTH,\n  userInfo: {},\n  currentSortType: SortType.POPULAR,\n  isAppError: false,\n};\n\nconst reducer = (state = initialState, action) => {\n\n  switch (action.type) {\n    case ActionType.CHANGE_CITY:\n      return {\n        ...state,\n        currentCity: action.payload,\n      };\n    case ActionType.SET_OFFERS:\n      return {\n        ...state,\n        offers: action.payload,\n        isDataLoaded: true,\n      };\n    case ActionType.SET_OFFERS_FAIL:\n      return {\n        ...state,\n        isDataLoaded: true,\n      };\n    case ActionType.CHANGE_SORT_TYPE:\n      return {\n        ...state,\n        currentSortType: action.payload,\n      };\n    case ActionType.LOGIN:\n      return {\n        ...state,\n        authorizationStatus: AuthorizationStatus.AUTH,\n        userInfo: action.payload,\n      };\n    case ActionType.LOGOUT:\n      return {\n        ...state,\n        authorizationStatus: AuthorizationStatus.NO_AUTH,\n        userInfo: initialState.userInfo,\n      };\n    case ActionType.SET_APP_ERROR:\n      return {\n        ...state,\n        isAppError: true,\n      };\n    default:\n      return state;\n  }\n};\n\n\nexport {reducer};\n","import axios from 'axios';\n\nconst BASE_URL = 'https://7.react.pages.academy/six-cities';\nconst REQUEST_TIMEOUT = 5000;\n\nconst HttpCode = {\n  UNAUTHORIZED: 401,\n  SERVER_ERROR: 500,\n};\n\n\nconst createApi = (onUnauthorized, onApiUnavailable) => {\n  const axiosInstance = axios.create({\n    baseURL: BASE_URL,\n    timeout: REQUEST_TIMEOUT,\n  });\n\n  const onSuccess = (response) => response;\n\n  const onFail = (err) => {\n    const {response} = err;\n\n    if (response.status === HttpCode.UNAUTHORIZED) {\n      onUnauthorized();\n    }\n    if (response.status >= HttpCode.SERVER_ERROR) {\n      onApiUnavailable();\n    }\n\n    throw err;\n  };\n\n  axiosInstance.interceptors.response.use(onSuccess, onFail);\n  axiosInstance.interceptors.request.use((config) => {\n    config.headers = { 'x-token': localStorage.getItem('token') ?? '' };\n    return config;\n  });\n  return axiosInstance;\n};\n\nexport {createApi};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/app';\nimport {reducer} from './store/reducer';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { Provider } from 'react-redux';\nimport {composeWithDevTools} from 'redux-devtools-extension';\nimport { createApi } from './services/api';\nimport { loadOffers, logout, checkAuth } from './store/api-action';\nimport { redirect } from './store/middleware/redirect';\nimport { ActionCreator } from './store/action';\n\nconst api = createApi(\n  () => store.dispatch(logout()),\n  () => store.dispatch(ActionCreator.setAppError()),\n);\n\nconst store = createStore(reducer, composeWithDevTools(\n  applyMiddleware(thunk.withExtraArgument(api)),\n  applyMiddleware(redirect),\n));\n\nstore.dispatch(checkAuth());\nstore.dispatch(loadOffers());\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'));\n\nexport {api};\n","import browserHistory from '../../browser-history';\nimport {ActionType} from '../action';\n\nexport const redirect = (_store) => (next) => (action) => {\n  if (action.type === ActionType.REDIRECT_TO_ROUTE) {\n    browserHistory.push(action.payload);\n  }\n\n  return next(action);\n};\n"],"sourceRoot":""}